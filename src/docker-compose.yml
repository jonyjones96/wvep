version: '3.1'

services:

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - /data/db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_USERNAME: user
      MONGO_PASSWORD: example
      MONGO_INITDB_DATABASE: testdb
    networks:
      - db_net 

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    networks:
      - db_net

  tcheck-api:
    container_name: tcheck-api
    build: 
      context: ..
      dockerfile: docker/Dockerfile.api
    restart: always
    environment:
      - HOST_ENV=mongo
      - USER_ENV=user
      - PASS_ENV=example
    ports:
      - 8080:8080
    networks:
      - db_net

  webapp:
    container_name: webapp
    build:
      context: ..
      dockerfile: docker/Dockerfile.webapp
    restart: always
    environment:
      - HOST_ENV=tcheck-api
    ports:
      - 8000:8000
    networks:
      - db_net

  nginx:
    container_name: nginx
    build:
      context: ..
      dockerfile: docker/Dockerfile.nginx
    restart: always
    ports:
      - 80:80
    networks:
      - db_net

networks:
  db_net:
